---
  CinderVolumes.create_and_delete_snapshot:
    -
      args:
          force: false
          display_name: "卷快照_create_and_delete_snapshot"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1

  CinderVolumes.create_and_list_snapshots:
    -
      args:
        force: True
        detailed: True
        display_name: "卷快照_create_and_list_snapshots"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1

  CinderVolumes.create_and_attach_volume:
    -
      args:
        size: 10
        image:
          name: "TestVM"
        flavor:
          name: "m1.tiny"
        name: "卷_create_and_attach_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.create_and_delete_volume:
    -
      args:
        size: 1
        volume_type: "eqlx"
        display_name: "eqlx卷_create_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        size: 1
        volume_type: "rbd"
        display_name: "rbd卷_create_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.create_and_extend_volume:
    -
      args:
        size: 5
        new_size: 1
        display_name: "卷_create_and_extend_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        size: 1
        new_size: 5
        display_name: "卷_create_and_extend_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.create_and_list_volume:
    -
      args:
        size: 1
        detailed: True
        display_name: "卷_create_and_list_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.create_and_upload_volume_to_image:
    -
      args:
        size: 1
        force: false
        container_format: "bare"
        disk_format: "raw"
        do_delete: true
        display_name: "镜像_create_and_upload_volume_to_image"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.create_and_delete_volume:
    -
      args:
        size: 1
        volume_type: "eqlx"
        image:
            name: "TestVM"
        display_name: "eqlx卷_create_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        size: 1
        volume_type: "rbd"
        image:
            name: "TestVM"
        display_name: "rbd卷_create_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.create_from_volume_and_delete_volume:
    -
      args:
        size: 5
        display_name: "卷_create_from_volume_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1
    -
      args:
        size: 5
        display_name: "卷_create_from_volume_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 5
    -
      args:
        size: 1
        display_name: "卷_create_from_volume_and_delete_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 5

  CinderVolumes.create_volume:
    -
      args:
        size: 1
        volume_type: "eqlx"
        display_name: "eqlx卷_create_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        size: 1
        volume_type: "rbd"
        display_name: "rbd卷_create_volume"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  CinderVolumes.list_volumes:
    -
      args:
        detailed: True
        display_name: "卷_list_volumes"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        volumes:
          size: 1
          volumes_per_tenant: 2

  GlanceImages.create_and_delete_image:
    -
      args:
        image_location: "/home/images/cirros-0.3.4-x86_64.img"
        container_format: "bare"
        disk_format: "raw"
        name: "镜像_create_and_delete_image"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  GlanceImages.create_and_list_image:
    -
      args:
        image_location: "/home/images/cirros-0.3.4-x86_64.img"
        container_format: "bare"
        disk_format: "raw"
        name: "镜像_create_and_list_image"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        image_location: "/home/images/cirros-0.3.4-x86_64.img"
        container_format: "bare"
        disk_format: "raw"
        name: "镜像_create_and_list_image"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  GlanceImages.create_image_and_boot_instances:
    -
      args:
        image_location: "/home/images/cirros-0.3.4-x86_64.img"
        container_format: "bare"
        disk_format: "raw"
        name: "镜像_create_image_and_boot_instances"
        flavor:
            name: "m1.tiny"
        number_instances: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  GlanceImages.list_images:
    -
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        images:
          image_location: "/home/images/cirros-0.3.4-x86_64.img"
          image_type: "raw"
          image_container: "bare"
          images_per_tenant: 4
          image_name: "镜像_list_images"

  KeystoneBasic.create_and_delete_service:
    -
      args:
        name: "Rally_服务"
        service_type: "Really_服务类型"
        description: "测试 Rally 服务，create_and_delete_service"
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_and_list_services:
    -
      args:
        name: "Rally_服务"
        service_type: "Really_服务类型"
        description: "测试 Rally 服务，create_and_list_services"
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_and_list_tenants:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_tenant_with_users:
    -
      args:
        name_length: 10
        users_per_tenant: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_tenant:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_delete_user:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_and_list_users:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  KeystoneBasic.create_user:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1

  NovaKeypair.boot_and_delete_server_with_keypair:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_delete_server_with_keypair"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        network:
          start_cidr: "100.1.0.0/26"

  NovaKeypair.create_and_delete_keypair:
    -
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaKeypair.create_and_list_keypairs:
    -
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaSecGroup.boot_and_delete_server_with_secgroups:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_delete_server_with_secgroups"
        security_group_count: 2
        rules_per_security_group: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        network:
          start_cidr: "100.1.0.0/26"

  NovaSecGroup.create_and_delete_secgroups:
    -
      args:
        security_group_count: 2
        rules_per_security_group: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaSecGroup.create_and_list_secgroups:
    -
      args:
        security_group_count: 2
        rules_per_security_group: 0
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        security_group_count: 2
        rules_per_security_group: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          nova:
              ram: -1
              instances: 5

  NovaServers.boot_and_delete_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_delete_server"
        force_delete: false
        min_sleep: 5
        max_sleep: 20
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_and_list_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_list_server"
        detailed: True
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_and_live_migrate_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_live_migrate_server"
        block_migration: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1

  NovaServers.boot_and_migrate_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_migrate_server"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1

  NovaServers.boot_and_rebuild_server:
    -
      args:
        flavor:
            name: "m1.small"
        from_image:
            name: "TestVM"
        to_image:
            name: "TestVM"
        name: "虚拟机_boot_and_rebuild_server"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        from_image:
            name: "TestVM"
        to_image:
            name: "TestVM"
        name: "虚拟机_boot_and_rebuild_server"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1

  NovaServers.boot_and_bounce_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_bounce_server"
        force_delete: false
        actions:
          -
            hard_reboot: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_bounce_server"
        force_delete: false
        actions:
          -
            soft_reboot: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_and_bounce_server"
        force_delete: false
        actions:
          -
            stop_start: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_server_from_volume_and_delete:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_server_from_volume_and_delete"
        volume_size: 10
        force_delete: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_server_from_volume:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "eqlx虚拟机_boot_server_from_volume"
        volume_size: 10
        volume_type: "eqlx"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "rbd虚拟机_boot_server_from_volume"
        volume_size: 10
        volume_type: "rbd"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_server_attach_created_volume_and_live_migrate:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        size: 10
        block_migration: false
        create_volume_kwargs:
            volume_type: "eqlx"
        boot_server_kwargs:
            name: "eqlx虚拟机_boot_server_attach_created_volume_and_live_migrate"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        size: 10
        block_migration: false
        create_volume_kwargs:
            volume_type: "rbd"
        boot_server_kwargs:
            name: "rbd虚拟机_boot_server_attach_created_volume_and_live_migrate"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_server_from_volume_and_live_migrate:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "eqlx虚拟机_boot_server_from_volume_and_live_migrate"
        block_migration: false
        volume_size: 10
        force_delete: false
        volume_type: "eqlx"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "rbd虚拟机_boot_server_from_volume_and_live_migrate"
        block_migration: false
        volume_size: 10
        force_delete: false
        volume_type: "rbd"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1

  NovaServers.snapshot_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机快照_snapshot_server"
        force_delete: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.boot_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_boot_server"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
            tenants: 1
            users_per_tenant: 1

  NovaServers.pause_and_unpause_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_pause_and_unpause_server"
        force_delete: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.resize_server:
    -
      args:
        flavor:
            name: "m1.small"
        image:
            name: "TestVM"
        name: "虚拟机_resize_server"
        to_flavor:
            name: "m1.tiny"
        confirm: true
        force_delete: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_resize_server"
        to_flavor:
            name: "m1.small"
        confirm: true
        force_delete: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NovaServers.suspend_and_resume_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM"
        name: "虚拟机_suspend_and_resume_server"
        force_delete: false
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  NeutronNetworks.create_and_delete_networks:
    -
      args:
        network_create_args: {
          name: "网络_create_and_delete_networks"
      }
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1

  NeutronNetworks.create_and_list_networks:
    -
      args:
        network_create_args: {
          name: "网络_create_and_list_networks"
        }
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1

  NeutronNetworks.create_and_update_networks:
    -
      args:
        network_create_args: {
          name: "网络_create_and_update_networks"
        }
        network_update_args:
            admin_state_up: False
            name: "_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1

  NeutronNetworks.create_and_delete_ports:
    -
      args:
        network_create_args: {
          name: "网络_create_and_delete_ports"
        }
        port_create_args: {}
        ports_per_network: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1

  NeutronNetworks.create_and_list_ports:
    -
      args:
        network_create_args: {
          name: "网络_create_and_list_ports"
        }
        port_create_args: {
          name: "端口_create_and_list_ports"
        }
        ports_per_network: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1

  NeutronNetworks.create_and_update_ports:
    -
      args:
        network_create_args: {
          name: "网络_create_and_update_ports"
        }
        port_create_args: {
          name: "端口_create_and_update_ports"
        }
        ports_per_network: 5
        port_update_args:
            admin_state_up: False
            device_id: "dummy_id"
            device_owner: "dummy_owner"
            name: "_port_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1

  NeutronNetworks.create_and_delete_routers:
    -
      args:
        network_create_args: {
          name: "网络_create_and_delete_routers"
        }
        subnet_create_args: {
          name: "子网_create_and_delete_routers"
        }
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args: {
          name: "路由_create_and_delete_routers"
        }
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
            router: -1

  NeutronNetworks.create_and_list_routers:
    -
      args:
        network_create_args: {
          name: "网络_create_and_list_routers"
        }
        subnet_create_args: {
          name: "子网_create_and_list_routers"
        }
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args: {
          name: "路由_create_and_list_routers"
        }
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
            router: -1

  NeutronNetworks.create_and_update_routers:
    -
      args:
        network_create_args: {
          name: "网络_create_and_update_routers"
        }
        subnet_create_args: {
          name: "子网_create_and_update_routers"
        }
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args: {
          name: "路由_create_and_update_routers"
        }
        router_update_args:
            admin_state_up: False
            name: "_router_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
            router: -1

  NeutronNetworks.create_and_delete_subnets:
    -
      args:
        network_create_args: {
          name: "网络_create_and_delete_subnets"
        }
        subnet_create_args: {
          name: "子网_create_and_delete_subnets"
        }
        subnet_cidr_start: "1.1.0.0/24"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1

  NeutronNetworks.create_and_list_subnets:
    -
      args:
        network_create_args: {
          name: "网络_create_and_list_subnets"
        }
        subnet_create_args: {
          name: "子网_create_and_list_subnets"
        }
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1

  NeutronNetworks.create_and_update_subnets:
    -
      args:
        network_create_args: {
          name: "网络_create_and_update_subnets"
        }
        subnet_create_args: {
          name: "子网_create_and_update_subnets"
        }
        subnet_cidr_start: "1.4.0.0/16"
        subnets_per_network: 2
        subnet_update_args:
            enable_dhcp: False
            name: "_subnet_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
